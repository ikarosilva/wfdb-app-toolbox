
_______________________________________________________________________________
Copyright (c) 2009 by Michael Craig, All Rights Reserved
Contact M. Craig (mic@mit.edu)

   This library (wfdb-swig-matlab) is free software; you can redistribute
   it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
   02111-1307  USA

_______________________________________________________________________________


INTRODUCTION
============

This file describes how to compile WFDB Tools for MATLAB, along with the
Java Web Start-based installer. At the moment, compilation is not exceedingly
easy, but this is mostly because there are numerous prerequisites that must be
built before WFDB Tools for MATLAB can be built.


OVERVIEW
========

Before compiling, it is helpful to have a brief overview of the layering of
WFDB Tools for MATLAB:

    +--------------------------------+
 0: | MATLAB code (WFDB Tools)       |   <-- this package
    +--------------------------------+
 1: | Java code (WFDB Tools)         |   <-- this package
    +--------------------------------+
 2: | JNI Java code (SWIG-generated) |   <-- from wfdb-swig
    +--------------------------------+
 3: | JNI C code (SWIG-generated)    |   <-- from wfdb-swig
    +--------------------------------+
 4: | WFDB Software Package, C code  |   <-- from wfdb
    +--------------------------------+
 5: | WFDB's dependencies, C code    |   <-- libcurl, etc.
    +--------------------------------+

Each layer relies on the layer below it. The two SWIG-generated layers use SWIG,
or Simplified Wrapper and Interface Generator (http://www.swig.org/) to generate
Java bindings for the WFDB library.

In order to compile layer 1, a JAR file, wfdb.jar, created by compiling layer
2, must exist. Currently it is expected that wfdb.jar be contained in a JAR
called wfdb-swig.jar, located in the root dir. wfdb-swig-matlab/. 

In theory, layer 4 may be compiled with any dependencies (layer 5) deemed
suitable. In practice, in order to properly load the shared libraries easily
on all systems, the names of these dependencies are hardcoded in the
NativeLibLoader.java files (one per platform). This may be changed in the future
to allow for greater flexibility.

Currently, the layer 5 libraries that are expected to be used (along with
versions and websites) are:

cURL,           7.19.3,   http://curl.haxx.se
GnuTLS,         2.6.4,    http://www.gnu.org/software/gnutls
GnuPG,          1.4.4,    http://www.gnupg.org/
Libgpg-error,   1.7,      http://www.gnupg.org/download/#libgpg-error
Libidn,         1.12,     http://www.gnu.org/software/libidn

The resulting shared libraries should be placed in:

  nativelibs/${OS}-${ARCH}/

for appropriate ${OS} and ${ARCH}. The text files

  nativelibs/${OS}-${ARCH}/native-lib-files-${ARCH}.txt

each contain a list of the shared libraries, exactly as they should be named.
E.g., nativelibs/linux-amd64/native-lib-files-amd64.txt contains:

  libcurl.so-amd64
  libgcrypt.so-amd64
  libgnutls.so-amd64
  libgpg-error.so-amd64
  libidn.so-amd64
  libwfdbjava.so-amd64
  libwfdb.so-amd64

These are named exactly how NativeLibLoader.java expects them to be named
(note that the -${ARCH} suffixes are stripped by the installer.)

Building these libraries is not performed by wfdb-swig-matlab's Makefile,
as it must be done per-OS and per-arch. of interest.


PREREQUISITES
=============

The immediate prerequisites are the WFDB Software Package
(http://www.physionet.org/physiotools/wfdb.shtml), and the WFDB SWIG Wrappers
(http://www.physionet.org/physiotools/wfdb-swig.shtml). The versions that have
been used are wfdb-10.4.18 and wfdb-swig-10.4.1.

Currently, a small patch must be applied to wfdb-10.4.18 before it is built;
this is aux/wfdb-10.4.18.patch. In the wfdb-10.4.18 directory, it can be
applied as follows:

  $ patch -p1 < ${WSMROOT}/aux/wfdb-10.4.18.patch

This patch adds a few small functions needed by WFDB Tools for MATLAB.

The steps for building the external prerequisites (layer 5) are outlined by
their respective documentations; a brief script to build on GNU/Linux is given
in aux/build_wfdbjava.sh, and rough instructions for building on MinGW are in
mingw-instructions.txt. These steps could (and should) be fully automated; take
these as rough guides, to be improved.


OTHER BUILD STEPS
=================

At the moment, the withtty program is not built by the Makefile (like the
native libraries, it must be built per-OS and per-architecture.) As with the
native libs., see the files nativelibs/${OS}-${ARCH}/withtty-{$ARCH}-name.txt
to see what the names of the withtty binaries should be.

A line in the comment at the top of withtty.c (and withtty-mac.c) indicates how
it should be compiled.


FINAL COMPILATION
=================

With all the prerequisites in place, compilation of WFDB Tools for MATLAB
(minus the installer) involves building the following files:

  wsm-matlab-code.jar                 (layer 0)
  wfdb-swig-matlab-${OS}.jar          (layer 1)
  wfdb-nativelibs-${OS}-${ARCH}.jar   (layers 3, 4, 5)

(Note that layer 2 is wfdb-swig.jar, which should contain wfdb.jar generated
by wfdb-swig.)

Typing "make all" will build these for all OSes and architectures of interest,
but if the prerequisites are not done for all of them, the JARs can be built
individually.)

The installer itself can be built by typing "make web-start-installer".


